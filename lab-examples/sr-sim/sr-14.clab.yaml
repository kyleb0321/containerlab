## Required bridge:
# sudo ip link add name sr-14s-fab type bridge
# sudo ip link set sr-14s-fab mtu 9000
# sudo ip link set sr-14s-fab up
name: "sros"
topology:
  kinds:
    nokia_srsim:
      memory: 16G
      license: license.txt
      image: harbor.ncse.io/library/srux/srsim:0.0.I8121
  nodes: 
    fab:
      kind: bridge
      # network-mode: container:sr-14s-a
    sr-14s-a: 
      kind: nokia_srsim
      type: SR-14s
      startup-config:  config-14s.cfg
      env:
        NOKIA_SROS_SYSTEM_BASE_MAC: 1c:58:07:00:03:01 
        NOKIA_SROS_SLOT: A 
        NOKIA_SROS_FABRIC_IF: eth1
    sr-14s-b:
      kind: nokia_srsim
      type: SR-14s
      network-mode: container:sr-14s-a
      startup-config:  config-14s.cfg
      env:
        NOKIA_SROS_SYSTEM_BASE_MAC: 1c:58:07:00:03:01 
        NOKIA_SROS_SLOT: B
        NOKIA_SROS_FABRIC_IF: eth2
    sr-14s-1:
      kind: nokia_srsim
      type: SR-14s
      network-mode: container:sr-14s-a
      env:
        NOKIA_SROS_SLOT: 1 
        NOKIA_SROS_FABRIC_IF: eth3

      stages:
        create:
          wait-for:
            - node: sr-14s-a
              stage: create
            - node: sr-14s-b
              stage: create
    sr-14s-2:
      kind: nokia_srsim
      type: SR-14s
      network-mode: container:sr-14s-a
      env:
        NOKIA_SROS_SLOT: 2
        NOKIA_SROS_FABRIC_IF: eth4
      stages:
        create:
          wait-for:
            - node: sr-14s-a
              stage: create
            - node: sr-14s-b
              stage: create
    sr-14s-3:
      kind: nokia_srsim
      type: SR-14s
      network-mode: container:sr-14s-a
      env:
        NOKIA_SROS_SLOT: 3
        NOKIA_SROS_FABRIC_IF: eth5
      stages:
        create:
          wait-for:
            - node: sr-14s-a
              stage: create
            - node: sr-14s-b
              stage: create
    sr-14s-4:
      kind: nokia_srsim
      type: SR-14s
      network-mode: container:sr-14s-a
      env:
        NOKIA_SROS_SLOT: 4
        NOKIA_SROS_FABRIC_IF: eth6
      stages:
        create:
          wait-for:
            - node: sr-14s-a
              stage: create
            - node: sr-14s-b
              stage: create
    sr-14s-5:
      kind: nokia_srsim
      type: SR-14s
      network-mode: container:sr-14s-a
      env:
        NOKIA_SROS_SLOT: 5
        NOKIA_SROS_FABRIC_IF: eth7
      stages:
        create:
          wait-for:
            - node: sr-14s-a
              stage: create
            - node: sr-14s-b
              stage: create
    sr-14s-6:
      kind: nokia_srsim
      type: SR-14s
      network-mode: container:sr-14s-a
      env:
        NOKIA_SROS_SLOT: 6
        NOKIA_SROS_FABRIC_IF: eth8
      stages:
        create:
          wait-for:
            - node: sr-14s-a
              stage: create
            - node: sr-14s-b
              stage: create
  links:
    ## FABRIC LINKS
    - endpoints: ["fab:veth0", "sr-14s-a:fab-0"] # dummy veth0 to make the fab bridge UP, otherwise it will say NO-CARRIER 
    - endpoints: ["sr-14s-a:eth1", "macvlan:fab"]
    - endpoints: ["sr-14s-b:eth2", "macvlan:fab"]
    - endpoints: ["sr-14s-1:eth3", "macvlan:fab"]
    - endpoints: ["sr-14s-2:eth4", "macvlan:fab"]
    - endpoints: ["sr-14s-3:eth5", "macvlan:fab"]
    - endpoints: ["sr-14s-4:eth6", "macvlan:fab"]
    - endpoints: ["sr-14s-5:eth7", "macvlan:fab"]
    - endpoints: ["sr-14s-6:eth8", "macvlan:fab"]

      
    ## DATA LINKS
    - endpoints: ["sr-14s-1:e1-1-c1-1", "sr-14s-2:e2-x1-1-c1-1"]
    - endpoints: ["sr-14s-1:e1-2-c1-1", "sr-14s-2:e3-1-c1-1"]


      ##    // the format of the interface name will be one of:
      ##    //   e1-2-3       -> card 1, mda 2, port 3
      ##    //   e1-2-c3-4    -> card 1, mda 2, connector 3, port 4
      ##    //   e1-x2-3-4    -> card 1, xiom 2, mda 3, port 4
      ##    //   e1-x2-3-c4-5 -> card 1, xiom 2, mda 3, connector 4, port 5

